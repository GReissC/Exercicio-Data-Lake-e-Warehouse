{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyOjNi6csQ400DGSPl85PPkx"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"5Dc_TBuwIo5a","executionInfo":{"status":"ok","timestamp":1713308397607,"user_tz":180,"elapsed":864,"user":{"displayName":"Guilherme Reis","userId":"07953779074170014583"}},"outputId":"43b8b797-8209-4600-841e-c7da6ac7eeac"},"outputs":[{"output_type":"stream","name":"stdout","text":["Conteúdo do data_warehouse.csv\n","           data  produto_id  quantidade  valor_total         nome    categoria\n","0    2024-04-18         393         234         5662  Produto 393       Roupas\n","1    2024-04-28         393         349         4129  Produto 393       Roupas\n","2    2024-04-25         154          63         2788  Produto 154  Eletrônicos\n","3    2024-04-25         154          81         1792  Produto 154  Eletrônicos\n","4    2024-04-04         154         296         9622  Produto 154  Eletrônicos\n","..          ...         ...         ...          ...          ...          ...\n","995  2024-04-22         152         274         6567  Produto 152  Eletrônicos\n","996  2024-04-17         575         321         3631  Produto 575  Eletrônicos\n","997  2024-04-13         162         176         6209  Produto 162  Eletrônicos\n","998  2024-04-07         170         427         7912  Produto 170    Alimentos\n","999  2024-04-19         380         328         2314  Produto 380    Alimentos\n","\n","[1000 rows x 6 columns]\n"]}],"source":["\n","import pandas as pd\n","import numpy as np\n","\n","# Define o tamanho limite para categorias de 600:\n","total_de_produtos = 600\n","produtos = {\n","    \"produto_id\": range(1, total_de_produtos + 1),\n","    \"nome\": [f\"Produto {i}\" for i in range(1, total_de_produtos + 1)],\n","    \"categoria\": np.random.choice([\"Eletrônicos\", \"Roupas\", \"Alimentos\"], total_de_produtos),\n","}\n","\n","# Coloca todos os produtos dentro do Data Frame:\n","df_produtos = pd.DataFrame(produtos)\n","\n","# Define 1000 vendas:\n","total_de_vendas = 1000\n","data_vendas = {\n","    \"data\": np.random.choice(pd.date_range(\"2024-04-01\", periods=30), total_de_vendas),\n","    \"produto_id\": np.random.randint(1, total_de_produtos + 1, total_de_vendas),\n","    \"quantidade\": np.random.randint(50, 500, total_de_vendas),\n","    \"valor_total\": np.random.randint(1000, 10000, total_de_vendas),\n","}\n","\n","# Coloca todas as vendas dentro do Data Frame:\n","df_vendas = pd.DataFrame(data_vendas)\n","\n","# Salva as vendas num arquivo .csv:\n","df_vendas.to_csv(\"vendas.csv\", index=False)\n","\n","#Salva os produtos num arquivo .csv:\n","df_produtos.to_csv(\"produtos.csv\", index=False)\n","\n","# Atrela cada arquivo .csv a uma variavel:\n","df_vendas = pd.read_csv(\"vendas.csv\")\n","df_produtos = pd.read_csv(\"produtos.csv\")\n","\n","# Agrupa as vendas e os produtos:\n","df_merge = pd.merge(df_vendas, df_produtos, on=\"produto_id\", how=\"inner\")\n","\n","# Cria um arquivo .csv para armazenar as informações que foram agrupadas\n","df_merge.to_csv(\"data_warehouse.csv\", index=False)\n","\n","# Salva em uma variável para poder fazer a leitura do warehouse\n","df_warehouse = pd.read_csv(\"data_warehouse.csv\")\n","print(\"Conteúdo do data_warehouse.csv\")\n","print(df_warehouse)"]}]}